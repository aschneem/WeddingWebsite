{"version":3,"sources":["components/Header.js","components/Section.js","components/HeaderImage.js","components/GalleryImage.js","components/GalleryEnlargedImage.js","components/GallerySection.js","components/EmbedSection.js","components/AttractionEntry.js","components/AttractionsSection.js","components/Announcement.js","components/Page.js","components/SignOn.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","Section","props","console","log","content","sectionTitle","src","image","alt","width","text","fields","map","field","key","name","value","footLink","href","link","HeaderImage","GalleryImage","display","onClick","GalleryEnlargedImage","onClose","e","stopPropagation","onLeft","class","onRight","GallerySection","openEnlargedImage","bind","closeEnlargedImage","navLeft","navRight","state","openImage","this","setState","leftImageIndex","images","indexOf","length","rightImageIndex","id","Component","EmbedSection","dangerouslySetInnerHTML","embedCode","AttractionEntry","address1","address2","description","AttractionsSection","attractions","attraction","Announcement","line1","line2","details","detail","substring","Page","pageData","contentType","SignOn","password","updatePassword","authenticate","event","target","targetUrl","encodeURI","fetch","timeout","then","response","json","data","onSessionChange","sessionId","type","onChange","App","window","localStorage","getItem","PageData","config","pages","exact","path","find","page","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.36756eed.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className='header collapse'>\r\n            <div className='headerContent'>\r\n                <h1 className='title'>\r\n                    <div className='firstName'>Erin <span className='lname'>O'Brien</span></div>\r\n                     <span className='amp'>&amp;</span>\r\n                     <div className='secondName'>Alex <span className='lname'>Schneeman</span></div>\r\n                </h1>\r\n                <div className='navBar'>\r\n                    <ul>\r\n                        <li><Link to=\"/\">Home</Link></li>\r\n                        <li><Link to=\"/gallery\">Gallery</Link></li>\r\n                        <li><Link to=\"/faqs\">FAQs</Link></li>\r\n                        <li><Link to=\"/registry\">Registry</Link></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>        \r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Section(props) {\r\n    console.log(\"Section\");\r\n    console.log(props);\r\n    return (<div className=\"section\">\r\n        <h2 className=\"sectionHeader\">{props.content.sectionTitle}</h2>\r\n        <div className=\"sectionContent\">\r\n            <img src={props.content.image} alt=\"\" width=\"100%\" />\r\n            <br />\r\n            {props.content.text}\r\n            <br />\r\n            {props.content.fields ? props.content.fields.map( field => (<div key={field.name}>\r\n                <span className=\"field\">{field.name}</span>\r\n                <span className=\"value\">{field.value}</span>\r\n            </div>)) : \"\"}\r\n            {props.content.footLink && <a href={props.content.footLink.link}>{props.content.footLink.text}</a>}\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\n\r\nfunction HeaderImage(props) {\r\n    console.log(\"HeaderImage\");\r\n    console.log(props);\r\n    return (<div className=\"headImage\"><img src={props.content.image} alt=\"\" /></div>);\r\n}\r\n\r\nexport default HeaderImage;","import React from 'react';\r\n\r\nfunction GalleryImage(props) {\r\n    if (!props.content.display){\r\n        return (null);\r\n    }\r\n    return (<div className=\"galleryImage\"><a onClick={() => props.onClick()} ><img src={props.content.image} alt=\"\" /></a></div>);\r\n}\r\n\r\nexport default GalleryImage;","import React from 'react';\r\n\r\nfunction GalleryEnlargedImage(props) {\r\n    if(!props.image) {\r\n        return (null);\r\n    }\r\n    return (<div className=\"overlay\" onClick={() => props.onClose()}>\r\n                <button className=\"leftNav\" onClick={e => {\r\n                    e.stopPropagation();\r\n                    props.onLeft();\r\n                }}>&lt;</button>\r\n                <div className=\"enlargedImage\">\r\n                    <img src={props.image.image} alt=\"\" />\r\n                </div>\r\n                <button class=\"rightNav\" onClick={e => {\r\n                    e.stopPropagation();\r\n                    props.onRight();\r\n                }}>&gt;</button>\r\n                <button class=\"closeButton\" onClick={() => props.onClose()}>X</button>\r\n            </div>);\r\n}\r\n\r\nexport default GalleryEnlargedImage;","import React from 'react';\r\nimport {Component} from 'react';\r\nimport GalleryImage from './GalleryImage.js';\r\nimport GalleryEnlargedImage from './GalleryEnlargedImage.js';\r\n\r\nexport default class GallerySection extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.openEnlargedImage = this.openEnlargedImage.bind(this);\r\n        this.closeEnlargedImage = this.closeEnlargedImage.bind(this);\r\n        this.navLeft = this.navLeft.bind(this);\r\n        this.navRight = this.navRight.bind(this);\r\n        this.state = {\r\n            openImage: null\r\n        };\r\n    }\r\n\r\n    openEnlargedImage(image) {\r\n        this.setState({openImage: image});\r\n    }\r\n\r\n    closeEnlargedImage() {\r\n        this.setState({openImage: null});\r\n    }\r\n\r\n    navLeft() {\r\n        if (!this.state.openImage){\r\n            return;\r\n        }\r\n        this.setState((state, props) => {\r\n            const openIndex = props.content.images.indexOf(state.openImage);\r\n            let leftImageIndex = (openIndex - 1 + props.content.images.length) % props.content.images.length;\r\n            while (!props.content.images[leftImageIndex].display) {\r\n                leftImageIndex = (leftImageIndex - 1 + props.content.images.length) % props.content.images.length;\r\n            }\r\n            return ({ openImage: props.content.images[leftImageIndex]})\r\n        });\r\n    }\r\n\r\n    navRight() {\r\n        if (!this.state.openImage){\r\n            return;\r\n        }\r\n        this.setState((state, props) => {\r\n            const openIndex = props.content.images.indexOf(state.openImage);\r\n            const rightImageIndex = (openIndex + 1 + props.content.images.length) % props.content.images.length;\r\n            while (!props.content.images[rightImageIndex].display) {\r\n                rightImageIndex = (rightImageIndex - 1 + props.content.images.length) % props.content.images.length;\r\n            }\r\n            return ({ openImage: props.content.images[rightImageIndex]})\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"section\">\r\n            <h2 className=\"sectionHeader\">{this.props.content.sectionTitle}</h2>\r\n            <div className=\"sectionContent\">\r\n                {this.props.content.images.map(image => (<GalleryImage key={image.id} content={image} onClick={() => this.openEnlargedImage(image)} />))}\r\n            </div>\r\n            <GalleryEnlargedImage image={this.state.openImage} onClose={() => this.closeEnlargedImage()} onLeft={() => this.navLeft()} onRight={() => this.navRight()} />\r\n        </div>\r\n        );\r\n    }\r\n};","import React, { Component } from 'react';\r\n\r\nexport default class EmbedSection extends Component{\r\n\r\n    componentDidMount() {\r\n        //eval(this.props.content.embedScript);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        //eval(this.props.content.embedScript);\r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"section\">\r\n            <h2 className=\"sectionHeader\">{this.props.content.sectionTitle}</h2>\r\n            <div className=\"sectionContent\" dangerouslySetInnerHTML={{ \"__html\": this.props.content.embedCode}}></div>\r\n        </div>);\r\n    }\r\n};\r\n","import React from 'react';\r\n\r\nfunction AttractionEntry(props) {\r\n    return (<div className=\"attractionEntry\">\r\n        <div className=\"attractionImageContainer\">\r\n            <img src={props.content.image} alt=\"\" className=\"attractionLogo\" />\r\n        </div>\r\n        <div className=\"attractionDetails\">\r\n            <div className=\"attractionTitle\">{props.content.name}</div>\r\n            <div className=\"attractionAddress1\">{props.content.address1}</div>\r\n            <div className=\"attractionAddress2\">{props.content.address2}</div>\r\n            <div className=\"attractionDescription\">\r\n                {props.content.description}\r\n                <br />\r\n                <a href={props.content.link.link}>{props.content.link.text}</a>    \r\n            </div>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default AttractionEntry;","import React from 'react';\r\nimport AttractionEntry from './AttractionEntry.js';\r\n\r\nfunction AttractionsSection(props) {\r\nreturn (<div className=\"section\">\r\n        <h2 className=\"sectionHeader\">{props.content.sectionTitle}</h2>\r\n        <div className=\"sectionContent\">\r\n            {props.content.attractions.map( attraction => <AttractionEntry key={attraction.name} content={attraction} />)}\r\n        </div>    \r\n    </div>);\r\n}\r\n\r\nexport default AttractionsSection;","import React from 'react';\r\n\r\nfunction Announcement(props) {\r\n    console.log(\"Announcement\");\r\n    console.log(props);\r\n    return (<div className=\"section\">\r\n        <div className=\"sectionContent\">\r\n            <h3 className=\"announcement\">{props.content.line1}</h3>\r\n            <h3 className=\"announcementDetails\">{props.content.line2}</h3>\r\n            {props.content.details.map( detail => (<div key={detail.substring(10,20)+\" \"+detail.length} className=\"announcementDescriptionDetail\">{detail}</div>))}\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default Announcement;","import React from 'react';\r\nimport Section from './Section.js';\r\nimport HeaderImage from './HeaderImage.js';\r\nimport GallerySection from './GallerySection.js';\r\nimport EmbedSection from './EmbedSection.js';\r\nimport AttractionsSection from './AttractionsSection.js';\r\nimport Announcement from './Announcement.js';\r\n\r\nfunction Page(props) {\r\n    console.log(props);\r\n    return (props.pageData.content.map(content => {\r\n        switch (content.contentType){\r\n            case \"headerImage\":\r\n                return (<HeaderImage key={content.contentType+\"-\"+content.sectionTitle} content={content} />);\r\n            case \"section\":\r\n                return (<Section key={content.contentType+\"-\"+content.sectionTitle} content={content} />);\r\n            case \"gallerySection\":\r\n                return (<GallerySection key={content.contentType+\"-\"+content.sectionTitle} content={content} />);\r\n            case \"embedSection\":\r\n                return (<EmbedSection key={content.contentType+\"-\"+content.sectionTitle} content={content} />);\r\n            case \"attractionsSection\":\r\n                return (<AttractionsSection key={content.contentType+\"-\"+content.sectionTitle} content={content} />);\r\n             case \"announcement\":\r\n             default:\r\n                return (<Announcement key={content.contentType+\"-\"+content.sectionTitle} content={content} />);\r\n        }\r\n    }));\r\n}\r\n\r\nexport default Page;\r\n","import React from 'react';\r\nimport {Component} from 'react';\r\nimport fetchJsonp from 'fetch-jsonp';\r\n\r\nexport default class SignOn extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = { password: ''};\r\n\r\n        this.updatePassword = this.updatePassword.bind(this);\r\n        this.authenticate = this.authenticate.bind(this);\r\n\r\n    }\r\n\r\n    updatePassword(event) {\r\n        this.setState({password: event.target.value});\r\n    }\r\n\r\n    authenticate(){\r\n        // const xhr = new XMLHttpRequest();\r\n        // xhr.addEventListener('load', () => {\r\n        //     console.log(xhr.responseText);\r\n        //     this.props.onSessionChange(JSON.parse(xhr.responseText).sessionId);\r\n        // });\r\n        // xhr.open('GET', 'https://script.google.com/macros/s/AKfycbyTjX1p_6pGAn6gNsYDUyWjaNBPds6ZJMvCzDQeERGKQ5AaeoY/exec?method=authenticate&password='+this.state.password);\r\n        // xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n        // xhr.send(JSON.stringify({ method: 'authenticate', password: this.state.password }));\r\n        // const requestOptions = {\r\n        //     method: 'POST',\r\n        //     headers: { 'Content-Type': 'application/json' },\r\n        //     body: JSON.stringify({ method: 'authenticate', password: this.state.password }),\r\n        //     cors: true,\r\n        //     credentials: 'same-origin'\r\n        // };\r\n        // fetch('https://script.google.com/macros/s/AKfycbxC3rkjb5uuKweGmrhjK_rGVJhgO-1qlz4xXnXpLfsTBBBU5PuL/exec', requestOptions)\r\n        //     .then(response => response.json())\r\n        //     .then(data => this.props.onSessionChange(data.sessionId));\r\n        let targetUrl = 'https%3A%2F%2Fscript.google.com%2Fmacros%2Fs%2FAKfycbyTjX1p_6pGAn6gNsYDUyWjaNBPds6ZJMvCzDQeERGKQ5AaeoY%2Fexec%3Fmethod%3Dauthenticate%26password%3D' \r\n            + encodeURI(this.state.password);\r\n        console.log(targetUrl);\r\n        fetch(\"https://us-central1-weddingwebsiteproxy.cloudfunctions.net/cors?url=\" + targetUrl,\r\n            {\r\n                timeout: 60000\r\n            }\r\n        )\r\n            .then(response => { console.log(response); return response.json();})\r\n            .then(data => this.props.onSessionChange(data.sessionId));\r\n\r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"authenticatePage\">\r\n            <div className=\"inviteForm\">\r\n                <div className=\"navBar\">\r\n                    Invitation Code\r\n                </div>\r\n                <div className=\"sectionContent\">\r\n                    <div className=\"field\">\r\n                        <input type=\"password\" id=\"password\" className=\"password\" onChange={this.updatePassword} />\r\n                    </div>\r\n                    <div>\r\n                        <button id=\"authenticate\" className=\"submitButton\" onClick={this.authenticate}>Enter</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n}","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Header from './components/Header.js';\nimport './App.css';\nimport PageData from './ww.json';\nimport Page from './components/Page.js';\nimport SignOn from './components/SignOn.js';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    const sessionId = window.localStorage.getItem('sessionId');\n\n    this.state = {\n      sessionId: sessionId,\n      PageData: PageData\n    }\n  }\n\n  onSessionChange(sessionId) {\n    let targetUrl = 'https%3A%2F%2Fscript.google.com%2Fmacros%2Fs%2FAKfycbyTjX1p_6pGAn6gNsYDUyWjaNBPds6ZJMvCzDQeERGKQ5AaeoY%2Fexec%3Fmethod%3Dconfig%26sessionId%3D'+sessionId \n        console.log(targetUrl);\n        console.log(PageData);\n        fetch(\"https://us-central1-weddingwebsiteproxy.cloudfunctions.net/cors?url=\" + targetUrl,\n            {\n                timeout: 60000\n            }\n        )\n            .then(response => { response.json().then( config => {console.log(config); this.setState({sessionId: sessionId, PageData: config})});});\n  }\n\n  render() {\n    if (!this.state.sessionId) {\n      return (<SignOn onSessionChange={ (sessionId) => this.onSessionChange(sessionId)} />);\n    }\n    return (\n      <Router>\n        <Header pages={this.state.PageData} />\n        <Switch>\n          <Route exact path={process.env.PUBLIC_URL + \"/\"}>\n            <Page pageData={this.state.PageData.pages.find(page => page.path === \"/\")} />\n          </Route> \n          <Route exact path={process.env.PUBLIC_URL + \"/gallery\"}>\n            <Page pageData={this.state.PageData.pages.find(page => page.path === \"/gallery\")} />\n          </Route> \n          <Route exact path={process.env.PUBLIC_URL + \"/faqs\"}>\n            <Page pageData={this.state.PageData.pages.find(page => page.path === \"/faqs\")} />\n          </Route> \n          <Route exact path={process.env.PUBLIC_URL + \"/registry\"}>\n            <Page pageData={this.state.PageData.pages.find(page => page.path === \"/registry\")} />\n          </Route> \n        </Switch>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}